@{
    ViewData["Title"] = "Asistencia Paciente";
    var adminRole = "admin";
    var tutorRole = "tutor";
    var studentRole = "paciente";
    var isStudent = User.HasRole(studentRole) && !User.HasRole(adminRole) && !User.HasRole(tutorRole);
}

<h1>Resultados Paciente</h1>

<div id="message"></div>

<input asp-if="isStudent" type="hidden" id="StudentId" value="" />

<div id="content">
    <form asp-if="!isStudent" id="studentForm">
        <div class="form-group">
            <label for="StudentId">Paciente</label>
            <select class="form-select" id="StudentId" name="StudentId" onchange="LoadData()" required aria-describedby="StudentId" placeholder="Selecciona el paciente"></select>
        </div>
    </form>

    <br />
    
    <button class="btn btn-secondary me-1 mb-1" onclick="LoadData()"><i class="bi bi-arrow-clockwise"></i></button>
    <button class="btn btn-secondary mb-1" onclick="Print()">Imprimir <i class="bi bi-printer-fill"></i></button>

    <table class="table table-borderless">
        <thead class="table-dark">
            <tr>
                <th scope="col">Terapia</th>
                <th scope="col" class="text-center">Completada</th>
            </tr>
        </thead>
        <tbody id="tableBody">
        </tbody>
    </table>
</div>

@section Scripts{
    <script>
        function Print() {
            var studentId = $('#StudentId').val();
            $.ajax({
                url: '@Api/report/studentresults/' + studentId,
                type: 'GET'
            })
                .done(function (data) {
                    DownloadFile(data);
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    var errorMessage = '';
                    if (jqXHR.status === 422) {
                        errorMessage = jqXHR.responseJSON.join('<br/>');
                    }
                    else {
                        errorMessage = jqXHR.responseText;
                    }

                    $('#modalMessage').html(GetAlertHtml(
                        'danger',
                        'Se produjo un error al realizar la operación',
                        'Oops!',
                        errorMessage
                    ));
                });
        }

        function LoadStudents() {
            $('#StudentId').html('');

            $.ajax({
                url: '@Api/Student/GetAll',
                type: 'GET',
            })
                .done(function (data) {
                    if (data.length !== 0) {
                        data.forEach((element) => {
                            var activeText = element.active ? "" : " (Inactivo)";
                            $('#StudentId').append(`
<option value="${element.id}">${element.fullName}${activeText}</option>
                            `);
                        });
                        LoadData();
                    }
                    else {
                        $('#content').html('<hr/><h5>No existen pacientes</h5>');
                    }
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    $('#modalMessage').html(GetAlertHtml(
                        'danger',
                        'Se produjo un error al obtener los datos de los pacientes',
                        'Oops!',
                        errorThrown
                    ));
                });
        }

        function LoadStudentData() {
            $.ajax({
                url: '@Api/Student/GetByUser/@(User.Id)',
                type: 'GET',
            })
                .done(function (data) {
                    if (data) {
                        $('#StudentId').val(data.id);
                        LoadData();
                    }
                    else {
                        $('#content').html('<hr/><h5>El paciente no existe</h5>');
                    }
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    if (jqXHR.status === 404) {
                        $('#content').html('<hr/><h5>El paciente no existe</h5>');
                    }
                    else {
                        $('#content').html('');
                        $('#message').html(GetAlertHtml(
                            'danger',
                            'Se produjo un error al obtener los datos del paciente',
                            'Oops!',
                            errorThrown
                        ));
                    }
                });
        }

        if (@(isStudent ? "true" : "false")) {
            LoadStudentData();
        }
        else {
            LoadStudents();
        }

        function LoadData() {
            var id = $('#StudentId').val();

            $('#tableBody').html('');
            $.ajax({
                url: '@Api/report/studentresults/' + id,
                type: 'GET',
            })
                .done(function (data) {
                    data.therapies.forEach((element) => {
                        var modulesHtml = BuildModuleTable(element.modulesResult);
                        $('#tableBody').append(`
<tr>
    <td><h4>${element.therapyName}</h4></td>
    <td class="text-center">${(element.completed ? `<i class="bi bi-check-circle-fill text-success"></i>` : ``)}</td>
</tr>
<tr>
    <td colspan="2">${modulesHtml}</td>
</tr>
                `);
                    });
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    $('#message').html(GetAlertHtml(
                        'danger',
                        'Se produjo un error al obtener los datos del paciente',
                        'Oops!',
                        errorThrown
                    ));
                });
        }

        function BuildModuleTable(modules) {
            var tableHtml = `
<table class="table table-hover mb-3 px-5">
    <thead class="table-secondary">
        <tr>
            <th scope="col">Módulo</th>
            <th scope="col">Descripción</th>
            <th scope="col">Puntaje</th>
            <th scope="col" class="text-center">Completado</th>
        </tr>
    </thead>
    <tbody>
            `;

            modules.forEach((element) => {
                tableHtml += `
<tr>
    <td>${element.moduleName}</td>
    <td>${element.moduleDescription}</td>
    <td>${element.score}</td>
    <td class="text-center">${(element.completed ? `<i class="bi bi-check-circle-fill text-success"></i>` : ``)}</td>
</tr>
                `});

            tableHtml += `
    </tbody>
</table>
            `;

            return tableHtml;
        }

        function DownloadFile(data) {
            $.ajax({
                url: '../report/studentresult',
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(data),
                xhrFields: {
                    responseType: 'blob' // Set the response type to blob
                },
            })
                .done(function (file) {
                    var studentCode = @(isStudent ? "true" : "false") ? `` : `-${data.code}`;
                    // Create a blob URL from the response data
                    const blobUrl = URL.createObjectURL(file);

                    // Create a temporary link to open the file in the browser
                    const link = document.createElement('a');
                    link.href = blobUrl;
                    link.target = '_blank';
                    link.download = `ResultadoEstudiante${studentCode}.pdf`;
                    link.click();
                    link.remove();
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    var errorMessage = jqXHR.responseText;

                    $('#modalMessage').html(GetAlertHtml(
                        'danger',
                        'Se produjo un error al descargar el archivo',
                        'Oops!',
                        errorMessage
                    ));
                });
        }
    </script>
}